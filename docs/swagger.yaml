definitions:
  storage.Song:
    properties:
      group:
        type: string
      id:
        type: integer
      link:
        type: string
      releaseDate:
        type: string
      song:
        type: string
      text:
        type: string
    type: object
info:
  contact: {}
paths:
  /songs:
    get:
      description: 'Получение песни или списка песен: limit - количество выводимых
        данных, offset - с какого элемента, можно фильтровать по любым полям'
      parameters:
      - description: Filter by group
        in: query
        name: group
        type: string
      - description: Filter by song name
        in: query
        name: song
        type: string
      - description: Limit the number of results
        in: query
        name: limit
        type: integer
      - description: Offset for pagination
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/storage.Song'
            type: array
        "500":
          description: Failed to get songs
          schema:
            type: string
      summary: Получение песни или списка песен
      tags:
      - songs
    post:
      consumes:
      - application/json
      description: Добавление новой песни с получением дополнительных данных от стороннего
        API
      parameters:
      - description: Song to add
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/storage.Song'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/storage.Song'
        "400":
          description: Invalid JSON
          schema:
            type: string
        "500":
          description: Failed to create song
          schema:
            type: string
      summary: Добавление новой песни
      tags:
      - songs
  /songs/{id}:
    delete:
      description: Удаляет песню из библиотеки по ID
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid ID
          schema:
            type: string
        "500":
          description: Failed to delete song
          schema:
            type: string
      summary: Удаление песни из библиотеки
      tags:
      - songs
    put:
      description: Обновляет информацию о песне, данные передаются в теле запроса
        в формате JSON
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated song details
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/storage.Song'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/storage.Song'
        "400":
          description: Invalid ID or JSON
          schema:
            type: string
        "500":
          description: Failed to update song
          schema:
            type: string
      summary: Обновление песни в библиотеке
      tags:
      - songs
swagger: "2.0"
